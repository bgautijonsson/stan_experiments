---
title: "Simple Normal Copula"
format: html
editor: source
---


```{r setup}
library(cmdstanr)
library(evd)
library(tidyverse, warn.conflicts = FALSE)
library(posterior)
library(bayesplot)
library(gt)
library(here)
library(purrr)
library(glue)
library(arrow)
library(GGally)
library(broom)
library(gt)
library(gtExtras)
library(scales)
library(geomtextpath)

theme_set(bggjphd::theme_bggj())

alpha <- 0.05
```



```{r}
posterior <- open_dataset(
  here("Results", "Stan", "copula_data", "shared_params", "posterior"),
  format = "parquet"
) |> 
  collect() |> 
  mutate(
    rho = max(true_value[variable == "rho"]),
    .by = simulation
  ) |> 
  mutate(
    model = fct_relevel(model, "copula", "two step", "three step", "iid") |> 
    fct_recode(
      "AR(1) Copula" = "copula",
      "i.i.d. Copula" = "iid",
      "Two-Step Estimation" = "two step",
      "Three-Step Estimation" = "three step"
    )
  ) 
caption <- bquote(
  paste(
    "Based on ", 
    .(max(posterior$simulation)), 
    " simulations from a multivariate distribution with GEV(6, 3, 0.1) margins and AR(1) copula where the dependence parameter, ",
    rho, ", is drawn from a Uniform(-1, 1) distribution with probability 0.9 and is equal to 0 with probability 0.1."
  )
)
```

```{r}
posterior |> 
  summarise(
    rhat = max(rhat),
    .by = simulation
  ) |> 
  ggplot(aes(rhat)) +
  geom_histogram()
```

```{r}
posterior <- posterior |> 
  filter(
    max(rhat) < 1.1,
    .by = simulation
  )
```


```{r}
p <- posterior |>
  filter(
    rhat < 1.1,
    variable != "log_lik"
  ) |> 
  mutate(
    error = abs(posterior_mean - true_value) / abs(true_value)
  ) |> 
  filter(
    is.finite(error)
  ) |> 
  ggplot(aes(rho, error, col = model, fill = model)) +
  geom_smooth(alpha = 0.4) +
  geom_hline(yintercept = 0, lty = 2) +
  scale_x_continuous(
    limits = c(-1, 1),
    expand = expansion()
  ) +
  scale_y_continuous(
    trans = "log10",
    labels = label_percent()
  ) +
  scale_color_brewer(palette = "Set1") +
  scale_fill_brewer(palette = "Set1") +
  guides(size = "none") +
  facet_grid(
    rows = vars(variable),
    cols = vars(n_replicate), 
    scales = "free_y", 
    labeller = label_parsed
    ) +
  theme(
    legend.position = "top",
    plot.margin = margin(5, 15, 5, 15),
    strip.text = element_text(size = 12),
    panel.spacing.x = unit(0.7, "cm")
  ) +
  labs(
    title = "Absolute % errors when using the posterior mean as our estimator",
    subtitle = str_c(
      "More replicates lead to better estimates"
    ),
    x = expression(rho),
    y = expression(frac(abs(bar(theta)[post] - theta[true]),theta[true])),
    col = NULL,
    fill = NULL,
    #caption = caption
  )

ggsave(
  plot = p,
  filename = "Results/Figures/param_errors_abs.png",
  width = 8, height = 0.8 * 8, scale = 1.4
)
```



```{r}
p <- posterior |>
  filter(
    rhat < 1.1,
    variable != "log_lik"
  ) |> 
  mutate(
    error = posterior_mean - true_value
  ) |> 
  ggplot(aes(rho, error, col = model, fill = model)) +
  geom_smooth(alpha = 0.4) +
  geom_hline(yintercept = 0, lty = 2) +
  scale_x_continuous(
    limits = c(-1, 1),
    expand = expansion()
  ) +
  scale_y_continuous(
    # trans = "log10",
    # labels = label_percent()
  ) +
  scale_color_brewer(palette = "Set1") +
  scale_fill_brewer(palette = "Set1") +
  guides(size = "none") +
  facet_grid(
    rows = vars(variable),
    cols = vars(n_replicate), 
    scales = "free_y", 
    labeller = label_parsed
    ) +
  theme(
    legend.position = "top",
    plot.margin = margin(5, 15, 5, 15),
    strip.text = element_text(size = 12), 
    panel.spacing.x = unit(0.7, "cm")
  ) +
  labs(
    title = "Errors when using the posterior mean as our estimator",
    subtitle = str_c(
      "More replicates lead to better estimates"
    ),
    x = expression(rho),
    y = expression(bar(theta)[post] - theta[true]),
    col = NULL,
    fill = NULL,
    #caption = caption
  )

ggsave(
  plot = p,
  filename = "Results/Figures/param_errors.png",
  width = 8, height = 0.8 * 8, scale = 1.4
)
```

```{r}
p <- posterior |> 
  filter(
    variable == "log_lik"
    ) |> 
  mutate(
    mean_log_lik = posterior_mean / (n_replicate * n_id)
  ) |> 
  ggplot(aes(rho, mean_log_lik, col = model)) +
  geom_smooth(aes(fill = model), color = NA, alpha = 0.4) +
  geom_labelsmooth(
    aes(label = model, hjust = model),
    text_only = TRUE,
    size = 3
  ) +
  scale_x_continuous(
    limits = c(-1, 1),
    expand = expansion()
  ) +
  scale_color_brewer(palette = "Set1") +
  scale_fill_brewer(palette = "Set1") +
  scale_hjust_manual(values = c(0.9, 0.5, 0.1)) +
  facet_wrap(
    "n_replicate", 
    scales = "free", 
    labeller = label_both
    ) +
  theme(
    legend.position = "none",
    plot.margin = margin(t = 5, r = 15, b = 5, l = 15)
  ) +
  labs(
    title = "The elppd gains from the AR(1) Copula increase with higher autocorrelations",
    subtitle = str_c(
      "The Two-Step model is close to the true model with 20 or more replicates"
    ),
    x = expression(rho),
    y = "elppd",
    #caption = caption
  )

ggsave(
  plot = p,
  filename = "Results/Figures/elppd.png",
  width = 8, height = 0.621 * 8, scale = 1.3
)
```







```{r}
logit <- function(x) log(x / (1 - x))
inv_logit <- function(x) 1 / (1 + exp(-x))
p <- posterior |> 
  filter(
    variable == "log_lik",
    posterior_mean > -100000
    ) |> 
  mutate(
    mean_log_lik = posterior_mean / (n_replicate * n_id)
  ) |> 
  select(
    model, mean_log_lik, simulation, rho, n_id, n_replicate
  ) |> 
  pivot_wider(names_from = model, values_from = mean_log_lik) |> 
  pivot_longer(c(-"i.i.d. Copula", -simulation, -rho, -n_id, -n_replicate)) |> 
  mutate(
    diff = value - `i.i.d. Copula`
  ) |> 
  ggplot(aes(rho, diff)) +
  geom_hline(yintercept = 0, lty = 2, alpha = 0.5, linewidth = 0.5) + 
  geom_smooth(
    aes(col = name, fill = name),
    alpha = 0.1
  ) +
  geom_labelsmooth(
    aes(col = name, label = name, hjust = name),
    text_only = TRUE, 
    size = 3
  ) +
  scale_x_continuous(
    limits = c(-1, 1),
    expand = expansion()
  ) +
  scale_color_brewer(palette = "Set1") +
  scale_fill_brewer(palette = "Set1") +
  scale_hjust_manual(values = c(0.8, 0.2)) +
  facet_wrap(
    "n_replicate", 
    scales = "free",
    labeller = label_both 
    ) +
  theme(
    legend.position = "none",
    plot.margin = margin(t = 5, r = 15, b = 5, l = 15)
  ) +
  labs(
    title = "Comparing the models to the i.i.d. model",
    subtitle = str_c(
      "The Two-Step model is close to the true model with 20 or more replicates"
    ),
    # x = expression(paste("logit(", rho, ")")),
    x = expression(rho),
    y = expression(paste(elppd[AR(1)] - elppd[i.i.d.])),
    #caption = caption
  )


ggsave(
  plot = p,
  filename = "Results/Figures/diff_elppd.png",
  width = 8, height = 0.621 * 8, scale = 1.3
)
```



```{r}
posterior |>
  filter(
    str_detect(model, "Step")
  ) |>
  distinct(simulation, model, Q_diag_mult) |>
  mutate(
    Q_diag_mult = 1 * (Q_diag_mult > 1)
  ) |> 
  count(Q_diag_mult, model) |>
  mutate(
    p = n / sum(n),
    .by = model
  ) |> 
  select(-n) |> 
  pivot_wider(names_from = model, values_from = p)
```


```{r}
plot_dat <- posterior |> 
  filter(
    variable == "log_lik",
    model != "i.i.d. Copula"
    ) |> 
  mutate(
    mean_log_lik = posterior_mean / (n_replicate * n_id)
  ) |> 
  select(
    model, mean_log_lik, simulation, n_id, n_replicate
  ) |> 
  pivot_wider(names_from = model, values_from = mean_log_lik) |> 
  mutate(
    diff = `Two-Step Estimation` - `AR(1) Copula`
  ) |> 
  summarise(
    diff = mean(diff),
    .by = c(n_id, n_replicate)
  ) |> 
  mutate(
    diff = pmin(0, diff)
  )

p <- plot_dat |> 
  ggplot(aes(n_replicate, n_id)) +
  geom_tile(aes(fill = diff)) +
  scale_x_log10(
    breaks = unique(plot_dat$n_replicate)
  ) +
  scale_y_log10(
    breaks = unique(plot_dat$n_id)
  ) +
  scale_fill_gradient(
    high = "white",
    low = muted("red"),
    labels = \(x) scales::percent(exp(x) - 1)
  ) +
  coord_cartesian(
    expand = FALSE
  ) +
  labs(
    x = "Number of Replicates",
    y = "Number of distinct IDs",
    fill = NULL,
    subtitle = expression(paste(elppd[Two-Step] - elppd[AR(1)])),
    title = "When does the two-step model do as well as the correct AR(1) model?",
    #caption = caption
  )

p

ggsave(
  plot = p,
  filename = "Results/Figures/diff_elppd_by_size.png",
  width = 8, height = 0.9 * 8, scale = 1.3
)
```


```{r}
plot_dat <- posterior |> 
  filter(
    variable == "log_lik",
    model != "i.i.d. Copula"
  ) |> 
  mutate(
    mean_log_lik = posterior_mean / (n_replicate * n_id)
  ) |> 
  select(
    model, mean_log_lik, simulation, n_id, n_replicate
  ) |> 
  pivot_wider(names_from = model, values_from = mean_log_lik) |> 
  mutate(
    diff = `Two-Step Estimation` - `AR(1) Copula`
  ) |> 
  summarise(
    diff = mean(diff),
    .by = c(n_id, n_replicate)
  ) |> 
  mutate(
    diff = pmin(0, diff)
  )

p <- plot_dat |> 
  ggplot(aes(n_id, n_replicate / n_id)) +
  geom_tile(
    aes(fill = diff)
    ) +
  geom_hline(
    yintercept = 1, 
    lty = 2,
    alpha = 0.5
  ) +
  scale_x_log10(
  ) +
  scale_y_log10(
  ) +
  scale_fill_gradient(
    high = "white",
    low = muted("red"),
    labels = \(x) scales::percent(exp(x) - 1)
  ) +
  coord_cartesian(
    expand = FALSE
  ) +
  labs(
    x = "Number of IDs",
    y = expression(frac(N[replicates],N[id])),
    fill = NULL,
    subtitle = "Difference in elppd between the AR(1) model and the two-step model",
    title = "The number of replicates needed scales with the number of distinct IDs",
    #caption = caption
  )

p

ggsave(
  plot = p,
  filename = "Results/Figures/diff_elppd_by_size2.png",
  width = 8, height = 0.9 * 8, scale = 1.3
)
```

